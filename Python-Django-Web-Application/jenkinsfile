
//This pipeline builds and runs test cases on the python project

pipeline {
    agent 
    {
        docker {
            image 'sumanth484/python-docker-image:v1' // Use a Docker image with python
            args '-u root -v /var/run/docker.sock:/var/run/docker.sock' // user argument passed to docker run command
        }
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'Git-Hub', url: 'https://github.com/Sumanth484/Docker.git']])
            }
        }
        stage('Installing requirements') {
            steps {
                sh '''
                    pip install -r requirements.txt
                '''
            }
        }
        stage('Run Migrations') {
            steps {
                sh '''
                    python manage.py migrate
                '''
            }
        }
        stage('Run Tests') {
            steps {
                sh '''
                    python manage.py test
                '''
            }
        }
        
        stage('Build and push docker image') {
            
            environment {
		//BUILD_NUMBER takes the number from the build
                DOCKER_IMAGE = "sumanth484/python-app:v${BUILD_NUMBER}"

		//Create docker-cred credentials in Jenkins credentials
                REGISTRY_CREDENTIALS = credentials('docker-cred')
            }
            
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                        dockerImage.push()
                    }
                }
            }
        }
        
    }
    post {
        always {
            echo 'Pipeline execution completed.'
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline execution failed.'
        }
    }
}
